{"version":3,"sources":["src/app/meeples/cellule/cellule.component.html","src/app/meeples/meeple-infos/meeple-infos.component.html","src/app/meeples/meeple/meeple.component.html","src/app/meeples/partie/partie.component.html","src/app/meeples/start/start.component.html","src/app/meeples/terrain/terrain.component.html","src/app/meeples/cellule/cellule.component.scss","src/app/meeples/cellule/cellule.component.ts","src/app/meeples/domain/batiment.ts","src/app/meeples/domain/cellule.ts","src/app/meeples/domain/cout.ts","src/app/meeples/domain/hexaTerrain.ts","src/app/meeples/domain/meeple.ts","src/app/meeples/domain/message.ts","src/app/meeples/domain/partie.ts","src/app/meeples/meeple-infos/meeple-infos.component.scss","src/app/meeples/meeple-infos/meeple-infos.component.ts","src/app/meeples/meeple/meeple.component.scss","src/app/meeples/meeple/meeple.component.ts","src/app/meeples/meeples.module.ts","src/app/meeples/message.service.ts","src/app/meeples/partie.service.ts","src/app/meeples/partie/partie.component.scss","src/app/meeples/partie/partie.component.ts","src/app/meeples/start/start.component.scss","src/app/meeples/start/start.component.ts","src/app/meeples/terrain/terrain.component.scss","src/app/meeples/terrain/terrain.component.ts","src/app/utils.functions.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div (click)=\\\"select()\\\" class=\\\"cellule\\\" [ngClass]=\\\"{'selected': cellule.selected, \\r\\n    'invisible': !cellule.visible\\r\\n    }\\\">\\r\\n    {{cellule.celluleType.toString()}}\\r\\n    <span *ngIf=\\\"cellule.visible\\\">\\r\\n        {{cellule.contenu}}\\r\\n        {{cellule.dormeur?.symbole}}\\r\\n    </span>\\r\\n    <span *ngIf=\\\"cellule.meeplesPresents\\\">\\r\\n        <span *ngFor=\\\"let meeple of cellule.meeplesPresents\\\"\\r\\n            class=\\\"meeple\\\"\\r\\n            [ngClass]=\\\"{'selected': meeple.selected}\\\"\\r\\n            (click)=\\\"selectMeeple($event, meeple)\\\"\\r\\n            >{{meeple.symbole}}?</span>\\r\\n    </span>\\r\\n    <span *ngIf=\\\"!cellule.visible\\\">XXXX</span>\\r\\n</div>\"","export default \"<span [ngStyle]=\\\"{'border': '2px solid ' + meeple.color1, 'padding':'1.5px 0', 'border-radius':'10px'}\\\">\\r\\n    <span [ngStyle]=\\\"{'border': '2px solid ' + meeple.color2, 'padding': '0 3px', 'border-radius':'8px'}\\\">\\r\\n        {{meeple.nom}} ({{meeple.symbole}})\\r\\n    </span>\\r\\n</span>\\r\\n<div>sante: {{meeple.sante}}</div>\\r\\n<div>esperance de vie : {{meeple.esperance}}</div>\\r\\n<div>status: {{meeple.status}}</div>\\r\\n<div>déplacements: {{meeple.deplacement}}/{{meeple.deplacementMax}}</div>\\r\\n<div>pts d'action {{meeple.actionPoints}}</div>\\r\\n<button (click)=\\\"setOrdre($event, 'couche')\\\">Définir L</button>\\r\\n\\r\\n<div>\\r\\n    <div>{{meeple.position.celluleType}}</div>\\r\\n    <div>Actions possibles</div>\\r\\n    <div *ngFor=\\\"let action of actions\\\">\\r\\n        <div *ngIf=\\\"action.type_action === TYPE_ACTION.CONSTRUCTION\\\">\\r\\n            <button (click)=\\\"doAction(action)\\\">{{action.description}}</button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"action.type_action === TYPE_ACTION.EXPLORATION\\\">\\r\\n            <button (click)=\\\"doAction(action)\\\">{{action.description}}</button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"action.type_action === TYPE_ACTION.RECOLTE\\\">\\r\\n            <button (click)=\\\"doAction(action)\\\">{{action.description}}</button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"action.type_action === TYPE_ACTION.TRAVAIL\\\">\\r\\n            <button (click)=\\\"doAction(action)\\\">{{action.description}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<span\\n[ngStyle]=\\\"{'border': '2px solid ' + meeple.color1, 'padding':'1.5px 0', 'border-radius':'10px'}\\\">\\n<span\\n    [ngStyle]=\\\"{'border': '2px solid ' + meeple.color2, 'padding': '0 3px', 'border-radius':'8px'}\\\">\\n    {{meeple.nom}} ({{meeple.symbole}})\\n</span>\\n</span>\\n<span>sante: {{meeple.sante}}</span>\\n<span>esperance de vie : {{meeple.esperance}}</span>\\n<span>status: {{meeple.status}}</span>\\n<button (click)=\\\"setOrdre($event, 'couche')\\\">Définir L</button>\"","export default \"{{getTitle()}}\\r\\n\\r\\n<app-terrain [terrain]=\\\"partie.terrain\\\"></app-terrain>\\r\\n\\r\\n<div class=\\\"selection\\\" *ngIf=\\\"selectedElement\\\">\\r\\n    {{selectedElement.type}}\\r\\n    <div *ngIf=\\\"selectedElement.batiment\\\">\\r\\n        <div *ngIf=\\\"selectedElement.batiment.typeBatiment.nom === 'Robot'\\\">\\r\\n            <h4>Robot</h4>\\r\\n            <button>Décollage</button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"selectedElement.batiment.typeBatiment.nom !== 'Robot'\\\">\\r\\n            <h4>Batiment</h4>\\r\\n            {{selectedBatiment.typeBatiment.nom}}\\r\\n            <button> ???</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"selectedElement.type == TargetType.CELLULE\\\">\\r\\n        <h4>C</h4>\\r\\n        {{selectedElement.cellule.x}} {{selectedElement.cellule.y}} {{selectedElement.cellule.typeCellule}}\\r\\n        <span *ngIf=\\\"selectedElement.cellule.actionMeeples\\\">\\r\\n            <div *ngFor=\\\"let meeple of selectedElement.cellule.actionMeeples.meeples\\\">\\r\\n                {{meeple.nom}} - Action: {{selectedElement.cellule.carte}} {{selectedElement.cellule.plan}}\\r\\n            </div>\\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"selectedElement.type === TargetType.MEEPLE\\\">\\r\\n        <app-meeple-infos [meeple]=\\\"selectedElement.meeple\\\"></app-meeple-infos>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"logs\\\">\\r\\n    <div *ngFor=\\\"let msg of logs\\\">{{msg}}</div>\\r\\n</div>\"","export default \"<div *ngIf=\\\"partie\\\">\\r\\n    <app-partie [partie]=\\\"partie\\\"></app-partie>\\r\\n</div>\"","export default \"<div class=\\\"terrain-container \\\">\\r\\n    <table class=\\\"carte\\\">\\r\\n        <tr *ngFor=\\\"let ligne of terrain.cases\\\">\\r\\n            <td *ngFor=\\\"let cellule of ligne\\\">\\r\\n                <app-cellule [cellule]=\\\"cellule\\\"></app-cellule>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<!--<div class=\\\"terrain\\\">\\r\\n    <div class=\\\"terrain-container\\\">\\r\\n        <div class=\\\"carte\\\">\\r\\n            <div *ngFor=\\\"let ligne of terrain.cases\\\" class=\\\"ligne\\\">\\r\\n                <app-cellule [cellule]=\\\"cellule\\\" *ngFor=\\\"let cellule of ligne\\\"></app-cellule>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>-->\\r\\n\"","export default \".cellule {\\n  width: 30px;\\n  height: 20px;\\n  background-color: lightgray;\\n}\\n.cellule.invisible {\\n  background-color: darkgray;\\n}\\n.cellule.selected {\\n  border: 1px solid darkgray;\\n}\\n.cellule.ocean {\\n  background-color: #dfdfff;\\n}\\n.cellule.foret {\\n  background-color: #b2c2aa;\\n}\\n.cellule.plaine {\\n  background-color: #dadab6;\\n}\\n.meeple {\\n  border: 1px solid white;\\n  cursor: col-resize;\\n  background-color: lightgray;\\n}\\n.meeple.selected {\\n  border: 1px solid darkgray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVlcGxlcy9jZWxsdWxlL0U6XFxkZXZlbG9wcGVtZW50XFxwcm9qZXRzXzJcXGNvbG9uc19naXRodWJcXGNvbG9uc1xcY29kZVxcbWVlcGxlcy9zcmNcXGFwcFxcbWVlcGxlc1xcY2VsbHVsZVxcY2VsbHVsZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWVlcGxlcy9jZWxsdWxlL2NlbGx1bGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLDJCQUFBO0FDQ0o7QURBSTtFQUNJLDBCQUFBO0FDRVI7QURBSTtFQUNJLDBCQUFBO0FDRVI7QURBSTtFQUNJLHlCQUFBO0FDRVI7QURBSTtFQUNJLHlCQUFBO0FDRVI7QURBSTtFQUNJLHlCQUFBO0FDRVI7QURFQTtFQUNJLHVCQUFBO0VBQ0Esa0JBQUE7RUFDQSwyQkFBQTtBQ0NKO0FEQUk7RUFDSSwwQkFBQTtBQ0VSIiwiZmlsZSI6InNyYy9hcHAvbWVlcGxlcy9jZWxsdWxlL2NlbGx1bGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VsbHVsZSB7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcclxuICAgICYuaW52aXNpYmxlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZ3JheTtcclxuICAgIH1cclxuICAgICYuc2VsZWN0ZWR7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgZGFya2dyYXk7XHJcbiAgICB9XHJcbiAgICAmLm9jZWFuIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIzLCAyMjMsIDI1NSk7XHJcbiAgICB9XHJcbiAgICAmLmZvcmV0IHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTc4LCAxOTQsIDE3MCk7XHJcbiAgICB9XHJcbiAgICAmLnBsYWluZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxOCwgMjE4LCAxODIpO1xyXG4gICAgfVxyXG59XHJcblxyXG4ubWVlcGxlIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xyXG4gICAgY3Vyc29yOiBjb2wtcmVzaXplO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xyXG4gICAgJi5zZWxlY3RlZHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBkYXJrZ3JheTtcclxuICAgIH1cclxufSIsIi5jZWxsdWxlIHtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xufVxuLmNlbGx1bGUuaW52aXNpYmxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZGFya2dyYXk7XG59XG4uY2VsbHVsZS5zZWxlY3RlZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtncmF5O1xufVxuLmNlbGx1bGUub2NlYW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGZkZmZmO1xufVxuLmNlbGx1bGUuZm9yZXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjJjMmFhO1xufVxuLmNlbGx1bGUucGxhaW5lIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RhZGFiNjtcbn1cblxuLm1lZXBsZSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xuICBjdXJzb3I6IGNvbC1yZXNpemU7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbn1cbi5tZWVwbGUuc2VsZWN0ZWQge1xuICBib3JkZXI6IDFweCBzb2xpZCBkYXJrZ3JheTtcbn0iXX0= */\"","import { Component, OnInit, Input, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Cellule, CelluleType } from '../domain/cellule';\r\nimport { MessageService } from '../message.service';\r\nimport { Message, MessageType, TargetType } from '../domain/message';\r\nimport { Meeple } from '../domain/meeple';\r\nimport { MeeplePartieService } from '../partie.service';\r\n\r\n@Component({\r\n  selector: 'app-cellule',\r\n  templateUrl: './cellule.component.html',\r\n  styleUrls: ['./cellule.component.scss'],\r\n  // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CelluleComponent implements OnInit, OnChanges {\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(\"changes sur la cellule \" + this.cellule.x + \" \" + this.cellule.y + \" \" + changes);\r\n  }\r\n  @Input()\r\n  cellule: Cellule;\r\n\r\n  CelluleType: CelluleType;\r\n\r\n  constructor(private partieService: MeeplePartieService) {}\r\n\r\n  ngOnInit() {\r\n    console.log(\"on init\", this.cellule);\r\n  }\r\n  select() {\r\n    console.log(\"select C\");\r\n    \r\n    this.partieService.selectCellule(this.cellule);\r\n  } \r\n  selectMeeple(event: Event, meeple: Meeple) {\r\n    console.log(\"select M\");\r\n    event.stopPropagation();\r\n    this.partieService.selectMeeple(meeple);\r\n  }\r\n}\r\n","import { Cout } from './cout';\r\nimport { Cellule } from './cellule';\r\n\r\nexport class BatimentSprite {\r\n    public sizeY: any;\r\n    public sizeX: any;\r\n    public posX: number;\r\n    public posY: number;\r\n    constructor(x: number, y: number, sizeX, sizeY) {\r\n      this.posX = x;\r\n      this.posY = y;\r\n      this.sizeX = sizeX;\r\n      this.sizeY = sizeY;\r\n    }\r\n  }\r\n\r\nexport enum TYPE_BATIMENT {\r\n    ROBOT,\r\n    FEU_DE_CAMP,\r\n    PUITS,\r\n    FOYER,\r\n    HUTTE,\r\n    CABANE,\r\n    LOGE,\r\n    MINE_ARGILE,\r\n    CARRIERE_PIERRE,\r\n    ATELIER,\r\n    MAISON\r\n  }\r\n\r\nexport class ProtoBatiment {\r\n    sprite: BatimentSprite;\r\n    constructor(public nom: string,\r\n                public description: string,\r\n                public cout: Cout) {\r\n                  return this;\r\n    }\r\n    withSpriteCoords(a, b, c, d) {\r\n      this.sprite = new BatimentSprite(a, b, c, d);\r\n      return this;\r\n    }\r\n  }\r\n\r\nexport const PROTOS_BATIMENTS = {\r\n    ROBOT: new ProtoBatiment('Robot', 'Votre robot', new Cout()).withSpriteCoords(49, 1, 2, 2),\r\n    FEU_DE_CAMP: new ProtoBatiment('Feu de camp', 'Petit feu pour se chauffer et cuisiner', new Cout({ P: 4, B: 2 })),\r\n    PUITS: new ProtoBatiment('Puits', 'Trou dans la terre', new Cout()),\r\n    FOYER: new ProtoBatiment('Foyer', 'Feu de camp amélioré', new Cout({ P: 4, B: 2 })),\r\n    HUTTE: new ProtoBatiment('Hutte', 'Abri pour dormir', new Cout({ P: 4, B: 2 })).withSpriteCoords(72, 11, 3, 4),\r\n    CABANE: new ProtoBatiment('Cabane', 'Abri', new Cout({ P: 4, B: 2 })),\r\n    LOGE: new ProtoBatiment('Loge', 'Abri', new Cout({ P: 4, B: 2 })),\r\n    MINE_ARGILE: new ProtoBatiment('Cabane', 'Abri', new Cout({ P: 4, B: 2 })),\r\n    CARRIERE_PIERRE: new ProtoBatiment('Cabane', 'Abri', new Cout({ P: 4, B: 2 })),\r\n    ATELIER: new ProtoBatiment('Aterlier', 'Abri', new Cout({ P: 4, B: 2 })),\r\n    MAISON: new ProtoBatiment('Cabane', 'Abri', new Cout({ P: 4, B: 2 })),\r\n    SIDO: new ProtoBatiment('Sido', 'Maison avec toit rouge et murs blancs', new Cout({ P: 4, B: 2 }))\r\n  };\r\n\r\n\r\nexport class Batiment {\r\n    constructor(public cellule: Cellule, public proto: ProtoBatiment, infos: any[]) {}\r\n  }\r\n\r\n","import { Meeple } from './meeple';\r\nimport { Batiment, ProtoBatiment } from './batiment';\r\nimport { Carte } from './partie';\r\n\r\nexport enum CelluleType {\r\n  OCEAN,\r\n  MER,\r\n  SABLE,\r\n  TERRE,\r\n  PIERRE,\r\n  LAVE,\r\n  EAU,\r\n  FORET,\r\n  PLAINE\r\n}\r\nexport enum TYPE_ACTION {\r\n  TRAVAIL,\r\n  RECOLTE,\r\n  EXPLORATION,\r\n  CHASSE,\r\n  LOISIR,\r\n  CONSTRUCTION\r\n}\r\nexport class ActionMeeples {\r\n  constructor(public cellule: Cellule, public carte: Carte, public plan: ProtoBatiment, public meeples: Meeple[] = []) {}\r\n}\r\n\r\n\r\n\r\nexport class Cellule {\r\n  public selected = false;\r\n  public contenu: any[] = [];\r\n  public batiment: Batiment;\r\n\r\n  public meeplesPresents: Meeple[] = [];\r\n\r\n  public bgX: number;\r\n  public bgY: number;\r\n  public bgColor: string;\r\n  public visible = false;\r\n  public dormeur: Meeple = undefined;\r\n  // juste pour l'opti\r\n  public actionMeeples: ActionMeeples;\r\n  constructor(public x: number, public y: number, public celluleType: CelluleType) {\r\n    this.setCelluleType(celluleType);\r\n    this.contenu = [];\r\n  }\r\n\r\n  removeMeeplePresent(meeple: Meeple) {\r\n    this.meeplesPresents = this.meeplesPresents.filter(m => m != meeple);\r\n  }\r\n\r\n  setCelluleType(celluleType: CelluleType) {\r\n    this.celluleType = celluleType;\r\n    switch (celluleType) {\r\n      case CelluleType.EAU:\r\n        this.bgX = 23;\r\n        this.bgY = 29;\r\n        this.bgColor = '#EEEEEE';\r\n        break;\r\n      case CelluleType.MER:\r\n        this.bgX = 23;\r\n        this.bgY = 29;\r\n        break;\r\n      case CelluleType.PIERRE:\r\n        this.bgX = 30;\r\n        this.bgY = 24;\r\n        break;\r\n      case CelluleType.SABLE:\r\n        this.bgX = 5;\r\n        this.bgY = 1;\r\n        break;\r\n      case CelluleType.TERRE:\r\n        this.bgX = 4;\r\n        this.bgY = 0;\r\n        break;\r\n      case CelluleType.FORET:\r\n        const a = Math.floor(Math.random() * 4);\r\n        if (a === 0) {\r\n          this.bgX = 19;\r\n          this.bgY = 19;\r\n        } else if (a === 1) {\r\n          this.bgX = 20;\r\n          this.bgY = 19;\r\n        } else if (a === 2) {\r\n          this.bgX = 21;\r\n          this.bgY = 19;\r\n        } else {\r\n          this.bgX = 22;\r\n          this.bgY = 19;\r\n        }\r\n        break;\r\n      case CelluleType.PLAINE:\r\n        this.bgX = 12;\r\n        this.bgY = 0;\r\n        break;\r\n    }\r\n  }\r\n  addObject(objet: any) {\r\n    this.contenu.push(objet);\r\n  }\r\n}\r\n\r\nexport class Terrain {\r\n  cases: Cellule[][] = [];\r\n\r\n  constructor(public tailleX: number, public tailleY: number) {\r\n    this.cases = [];\r\n    for (let i = 0; i < tailleY; i++) {\r\n      const ligne = [];\r\n      this.cases.push(ligne);\r\n      for (let j = 0; j < tailleX; j++) {\r\n        ligne.push(new Cellule(j, i, CelluleType.TERRE));\r\n      }\r\n    }\r\n  }\r\n\r\n  getCellule(x, y): Cellule {\r\n    return this.cases[(y + this.tailleY) % this.tailleY][(x + this.tailleX) % this.tailleX];\r\n  }\r\n\r\n  setCellule(x: number, y: number, celluleType: CelluleType) {\r\n    this.getCellule(x, y).celluleType = celluleType;\r\n  }\r\n\r\n  getVoisin(cellule: Cellule, diffX: number, diffY: number) {\r\n    return this.getCellule(cellule.x + diffX, cellule.y + diffY);\r\n  }\r\n\r\n  setVisible(cellule: Cellule) {\r\n    cellule.visible = true;\r\n  }\r\n\r\n  setVisibleAvecVoisins(cellule: Cellule) {\r\n    this.setVisible(cellule);\r\n    this.setVisible(this.getVoisin(cellule, 1, 0));\r\n    this.setVisible(this.getVoisin(cellule, -1, 0));\r\n    this.setVisible(this.getVoisin(cellule, 0, 1));\r\n    this.setVisible(this.getVoisin(cellule, 0, -1));\r\n  }\r\n}\r\n","import { Element } from './elements';\r\n\r\nexport const Materiaux = {\r\n    e: 'eau',\r\n    b: 'bois',\r\n    a: 'argile',\r\n    i: 'minerai de fer',\r\n    f: 'fer',\r\n    p: 'planche',\r\n    v: 'viande',\r\n    o: 'poisson',\r\n    r: 'pierre',\r\n    h: 'herbe',\r\n    c: 'corde'\r\n    /*m: 'maïs',    g: 'graines',    l: 'laine',    t: 'tissu',\r\n    b: 'blé',    a: 'arbre',w: 'bois',    c: 'cheval',s: 'mouton',    h: 'herbe',    r: 'trésor',\r\n        f: 'fer',\r\n    _: 'rien'*/\r\n};\r\n\r\nexport const MATERIAU = {\r\n    BOIS: 'w', TISSU: 't', EAU: 'e', ARGILE: 'a', MINERAI_FER: 'i', FER: 'f', PLANCHE: 'p', VIANDE: 'v',\r\n    POISSON: 'o', PIERRE: 'r', CORDE: 'c', HERBE: 'h'\r\n};\r\n\r\nexport class Cout {\r\n    static from(s: string): Cout {\r\n        const elements = {};\r\n        s.split('').forEach(c => {\r\n            if (elements[c]) {\r\n                elements[c] += 1;\r\n            } else {\r\n                elements[c] = 1;\r\n            }\r\n        });\r\n        return new Cout(elements);\r\n    }\r\n\r\n    constructor(public elements: {[key: string]: number} = {}) {\r\n\r\n    }\r\n\r\n    add(cout: Cout) {\r\n        Object.keys(cout.elements).forEach(e => {\r\n            if (this.elements[e]) {\r\n                this.elements[e] += cout.elements[e];\r\n            } else {\r\n                this.elements[e] = cout.elements[e];\r\n            }\r\n        });\r\n    }\r\n\r\n    moreThan(cout: Cout): boolean {\r\n        let res = true;\r\n        Object.keys(cout.elements).forEach(e => res = res && this.elements[e] && this.elements[e] > cout.elements[e])\r\n        return res;\r\n    }\r\n\r\n    remove(cout: Cout) {\r\n        Object.keys(cout.elements).forEach(e => {\r\n            if (this.elements[e]) {\r\n                this.elements[e] -= cout.elements[e];\r\n            }\r\n        });\r\n    }\r\n}","import { Cellule, CelluleType } from './cellule';\r\n\r\nexport class HexaCellule extends Cellule {\r\n  hx: number;\r\n  hy: number;\r\n  hz: number;\r\n  constructor(x: number, y: number, type: CelluleType) {\r\n    super(x, y, type);\r\n    this.hx = x;\r\n    this.hy = Math.floor(x - y / 2);\r\n    this.hz = -this.hx - this.hy;\r\n  }\r\n  /*public static  FromOffsetCoordinates (int x, int z) {\r\n\t\treturn new HexCoordinates(x - z / 2, z);\r\n\t}*/\r\n}\r\n\r\nexport class HexaTerrain {\r\n  cases: HexaCellule[][] = [];\r\n  constructor(public tailleX: number, public tailleY: number) {\r\n    this.cases = [];\r\n    for (let i = 0; i < tailleY; i++) {\r\n      const ligne = [];\r\n      this.cases.push(ligne);\r\n      for (let j = 0; j < tailleX; j++) {\r\n        ligne.push(new HexaCellule(j, i, CelluleType.TERRE));\r\n      }\r\n    }\r\n  }\r\n  getCellule(x, y): HexaCellule {\r\n    return this.cases[(y + this.tailleY) % this.tailleY][(x + this.tailleX) % this.tailleX];\r\n  }\r\n  setCellule(x: number, y: number, celluleType: CelluleType) {\r\n    this.getCellule(x, y).celluleType = celluleType;\r\n  }\r\n\r\n  getVoisin(cellule: HexaCellule, diffX: number, diffY: number) {\r\n    return this.getCellule(cellule.x + diffX, cellule.y + diffY);\r\n  }\r\n\r\n  getDistance(cellule1: Cellule, cellule2: Cellule) {\r\n    return Math.abs(cellule1.x - cellule2.x) + Math.abs(cellule1.y - cellule2.y);\r\n  }\r\n\r\n  getVoisins(cellule: HexaCellule, distanceMax: number): HexaCellule[] {\r\n    const voisins: HexaCellule[] = [];\r\n    for (let ligne of this.cases) {\r\n        for (let cell of ligne) {\r\n          let distance = this.getDistance(cell, cellule);\r\n          if (distance > 0 && distance <= distanceMax) {\r\n            voisins.push(cell);\r\n          }\r\n        }\r\n    }\r\n    return voisins;\r\n  }\r\n\r\n  setVisible(cellule: HexaCellule) {\r\n    cellule.visible = true;\r\n  }\r\n\r\n\r\n  setVisibleAvecVoisins(cellule: HexaCellule) {\r\n    this.setVisible(cellule);\r\n    this.setVisible(this.getVoisin(cellule, 1, 0));\r\n    this.setVisible(this.getVoisin(cellule, -1, 0));\r\n    this.setVisible(this.getVoisin(cellule, 0, 1));\r\n    this.setVisible(this.getVoisin(cellule, 0, -1));\r\n  }\r\n}\r\n","import { Cellule } from './cellule';\r\n\r\nexport class Trait {\r\n  constructor(public nom: string, public description: string) {}\r\n}\r\n\r\nexport enum TRAIT {\r\n  RONFLEUR,\r\n  GROS_MANGEUR,\r\n  PETIT_MANGEUR,\r\n  GERMOPHOBE\r\n}\r\n\r\nexport const traits = {\r\n  RONFLEUR: new Trait('Ronfleur', 'Gêne les gens dormant dans la même pièce ou à proximité'),\r\n  GROS_MANGEUR: new Trait('Gros mangeur', 'A besoin de plus de nourriture pour être rassasié'),\r\n  PETIT_MANGEUR: new Trait('Petit mangeur', 'A besoin de moins de nourriture pour être rassasié'),\r\n  GERMOPHOBE: new Trait('Germophobe', 'Refuse tout contact avec des malades ou blessés'),\r\n  PACIFISTE: new Trait('Pacifiste', 'Déteste la violence'),\r\n  JOVIAL: new Trait('Jovial', \"S'entend facilement avec les autres\"),\r\n  MEDISANT: new Trait('Médisant', 'Se fâche facilement avec les autres'),\r\n  JALOUX: new Trait('Jaloux', 'Est susceptible aux différences de traitement'),\r\n  INTERIEUR: new Trait('Intérieur', \"Préfère travailler à l'intérieur. +1 joie\"),\r\n  EXTERIEUR: new Trait('Extérieur', \"Préfère travailler à l'extérieur. +1 joie\"),\r\n  NUL: new Trait('', '')\r\n};\r\n\r\nexport class Meeple {\r\n  selected = false;\r\n  traits: TRAIT[] = [];\r\n  position: Cellule;\r\n  \r\n  deplacement: number;\r\n  deplacementMax: number;\r\n  actions: number;\r\n  /*sante: number;\r\n  esperance: number;\r\n  satiete: number;\r\n  parent1: Meeple;\r\n  parent2: Meeple;\r\n  \r\n  energie = 1;\r\n  energieMax = 3;\r\n  bonheur = 2;\r\n  */\r\n  color1: string;\r\n  color2: string;\r\n  /*status: string;\r\n  */\r\n  couche: Cellule;\r\n \r\n  histoire: { sommeil?: number; bouffe?: number; eau?: number }[] = [];\r\n  constructor(public id: number, public symbole: string, public nom: string, public naissance: number) {\r\n    this.actions = 2;\r\n    this.deplacementMax = 3;\r\n    this.deplacement = 0;\r\n  }\r\n\r\n  aTrait(trait: TRAIT): boolean {\r\n    return this.traits.indexOf(trait) > -1;\r\n  }\r\n\r\n  setPosition(cellule: Cellule) {\r\n    if (cellule != this.position) {\r\n      this.position.removeMeeplePresent(this);\r\n      cellule.meeplesPresents.push(this);  \r\n      this.position = cellule;\r\n    }\r\n  }\r\n\r\n  ajouteHistoire() {\r\n    this.histoire.unshift({})\r\n  }\r\n}\r\n","export enum MessageType {\r\n  ACTION,\r\n  LOG,\r\n  SELECT,\r\n  MOVE\r\n} \r\n\r\nexport enum TargetType {\r\n    NONE, MEEPLE, CELLULE, \r\n}\r\n\r\nexport class Message {\r\n    constructor(\r\n        public messageType: MessageType,\r\n        // public name: string, \r\n        // public targetType: TargetType, \r\n        public target: any) {}\r\n  }","import { Meeple } from './meeple';\r\nimport { HexaTerrain, HexaCellule } from './hexaTerrain';\r\nimport { Batiment, ProtoBatiment, PROTOS_BATIMENTS } from './batiment';\r\nimport { ActionMeeples, Cellule, CelluleType } from './cellule';\r\nimport { random, melange, randomElement } from 'src/app/utils.functions';\r\nimport { TargetType } from './message';\r\nimport { Cout, MATERIAU } from 'src/app/meeples/domain/cout';\r\n\r\n\r\nexport class Element {\r\n  constructor(public nom: string, public description: string) {}\r\n}\r\n\r\nexport class SelectedElement {\r\n    type: TargetType;\r\n    batiment?: Batiment;\r\n    cellule?: Cellule;\r\n    meeple?: Meeple;\r\n    carte?: Carte;\r\n}\r\n\r\nexport class Carte extends Element {\r\n  constructor(public code: string, public cout: string, nom: string, description: string) {\r\n    super(nom, description);\r\n  }\r\n}\r\n\r\nexport const CARTES = [];\r\nfunction addCARTE(carte) {\r\n  CARTES[carte.code] = carte;\r\n}\r\naddCARTE(new Carte('rec', '', 'recolte', ''));\r\naddCARTE(new Carte('rech', '', 'recherche', ''));\r\naddCARTE(new Carte('def', '', 'defense', ''));\r\naddCARTE(new Carte('hunt', '', 'chasse', ''));\r\naddCARTE(new Carte('expl', '', 'exploration', ''));\r\naddCARTE(new Carte('cstr', '', 'construction', ''));\r\n\r\naddCARTE(new Carte('eau', '2', 'eau', \"fournit 10 rations d'eau\"));\r\naddCARTE(new Carte('eau 2', '2', 'eau niveau 2', \"fournit 30 rations d'eau\"));\r\naddCARTE(new Carte('cstr 2', '', 'construction avancée', ''));\r\naddCARTE(new Carte('chal', '', 'chaleur', ''));\r\naddCARTE(new Carte('heal', '', 'soin mineur', ''));\r\naddCARTE(new Carte('heal 2', '', 'soin majeur', ''));\r\naddCARTE(new Carte('def', '', 'defense', ''));\r\naddCARTE(new Carte('rem', '', 'remove', ''));\r\nexport enum COLONIE_STATUS {\r\n  // les colons savent qu'il faut endurer\r\n  CONCILIANT,\r\n  // les colons sont un peu plus couineurs\r\n  NORMAL,\r\n  // les colons exigent de voir votre manager\r\n  EXIGEANT\r\n}\r\nexport class Partie {\r\n  public status: COLONIE_STATUS = COLONIE_STATUS.CONCILIANT;\r\n  public logs: string[] = [];\r\n  public cartesPaquet: Carte[];\r\n  public reserve: {} = {};\r\n  public cartesMain: Carte[];\r\n  public cartesDefausse: Carte[];\r\n  public meeples: Meeple[] = [];\r\n  public terrain: HexaTerrain;\r\n  public batiments: Batiment[] = [];\r\n  public plansDisponibles: ProtoBatiment[] = [];\r\n  public actionsMeeples: ActionMeeples[] = [];\r\n\r\n  public dateDemarrage = random(100, 200);\r\n  public generalId = 1;\r\n  private meepleSyllabes = ['ga', 'fur', 'gol', 'bo', 'ber', 'dil', 'ne', 'zu', 'ra', 'meu', 'mul', 'ta', 'ni'];\r\n\r\n  constructor() {\r\n    this.buildTerrain();\r\n    const c = this.terrain.getCellule(7, 4);\r\n    this.addBatiment(c, PROTOS_BATIMENTS.ROBOT);\r\n    c.visible = true;\r\n    this.terrain.getVoisins(c, 2).forEach(c => c.visible = true);\r\n\r\n    this.generateMeeples();\r\n    this.initRobot();\r\n    this.initReserve();\r\n    this.initConstructionsPossibles();\r\n    this.log('Init fini');\r\n  }\r\n\r\n  public initConstructionsPossibles() {\r\n    this.plansDisponibles.push(PROTOS_BATIMENTS.HUTTE, PROTOS_BATIMENTS.FEU_DE_CAMP, PROTOS_BATIMENTS.MINE_ARGILE);\r\n  }\r\n\r\n  public addBatiment(cellule: HexaCellule, protoBatiment: ProtoBatiment) {\r\n    const batiment = new Batiment(cellule, protoBatiment, []);\r\n    this.batiments.push(batiment);\r\n    cellule.batiment = batiment;\r\n  }\r\n\r\n  public sendMeeple(meeple: Meeple, cellule: Cellule) {\r\n    // on deplace le meeple de cellule\r\n    const celluleOrigine = meeple.position;\r\n    if (celluleOrigine) {\r\n      console.log(celluleOrigine.meeplesPresents, meeple, celluleOrigine.meeplesPresents.filter(m => m.id !== meeple.id));\r\n      celluleOrigine.meeplesPresents = celluleOrigine.meeplesPresents.filter(m => m.id !== meeple.id);\r\n      console.log(celluleOrigine.meeplesPresents);\r\n    }\r\n    cellule.meeplesPresents.push(meeple);\r\n    meeple.position = cellule;\r\n\r\n    // on vire le meeple de son potentiel autre boulot\r\n    const currentMeepleAmIdx = this.actionsMeeples.findIndex(ams => ams.meeples.indexOf(meeple) > -1);\r\n    if (currentMeepleAmIdx > -1) {\r\n      const meepleIdx = this.actionsMeeples[currentMeepleAmIdx].meeples.indexOf(meeple);\r\n      delete this.actionsMeeples[currentMeepleAmIdx].meeples[meepleIdx];\r\n    } else {\r\n      console.log(\"meeple not found\");\r\n    }\r\n    if (cellule.actionMeeples) {\r\n      const am = cellule.actionMeeples;\r\n      if (am.meeples.indexOf(meeple) > -1) {\r\n        this.log('Ce meeple bosse déjà sur cette case !');\r\n      } else {\r\n        am.meeples.push(meeple);\r\n      }\r\n    } else {\r\n      this.log(\"Pas d'action sur cette case\");\r\n    }\r\n  }\r\n\r\n  /*addActionMeeples(cellule: Cellule, carte: Carte, plan?: TypeBatiment) {\r\n    const oldAm = cellule.actionMeeples;\r\n    if (oldAm) {\r\n      this.actionsMeeples.splice(this.actionsMeeples.indexOf(oldAm), 1);\r\n    }\r\n    const newAm = new ActionMeeples(cellule, carte);\r\n    cellule.actionMeeples = newAm;\r\n    this.actionsMeeples.push(newAm);\r\n    this.log('ajoute un am ' + cellule + ' de ' + carte);\r\n  }*/\r\n\r\n  public getActionMeeplesByCellule(cellule: Cellule, carte?: Carte): ActionMeeples {\r\n    const a = this.actionsMeeples.filter(am => am.cellule === cellule && (!carte || am.carte === carte));\r\n    return a.length > 0 ? a[0] : undefined;\r\n  }\r\n\r\n  public getActionMeeplesByMeeple(meeple: Meeple) {\r\n    return this.actionsMeeples.filter(am => am.meeples.find(m => m === meeple));\r\n  }\r\n\r\n  public log(msg: string) {\r\n    this.logs.push(msg);\r\n  }\r\n\r\n  private initReserve() {\r\n    this.reserve = Cout.from('eeeeewwwph');\r\n  }\r\n\r\n  private initRobot() {\r\n    this.cartesPaquet = [];\r\n    this.cartesMain = [];\r\n    this.cartesDefausse = [];\r\n    this.cartesPaquet = [\r\n      CARTES['expl'],\r\n      CARTES['rec'],\r\n      //  Object.assign({}, CARTES['rec']),\r\n      CARTES['hunt'],\r\n      //    Object.assign({}, CARTES['hunt']),\r\n      CARTES['rech'],\r\n      CARTES['def'],\r\n      CARTES['cstr']\r\n      //      Object.assign({}, CARTES['cstr'])\r\n    ];\r\n\r\n    melange(this.cartesPaquet);\r\n    this.piocheX(4);\r\n  }\r\n\r\n  private piocheX(x: number) {\r\n    for (let i = 0; i < x; i++) {\r\n      console.log('pioche');\r\n      this.pioche();\r\n    }\r\n  }\r\n\r\n  private defausseMain() {\r\n    const nbMain = this.cartesMain.length;\r\n    for (let i = 0; i < nbMain; i++) {\r\n      this.cartesDefausse.push(this.cartesMain.pop());\r\n    }\r\n  }\r\n\r\n  private pioche() {\r\n    if (this.cartesPaquet.length > 0) {\r\n      this.cartesMain.push(this.cartesPaquet.pop());\r\n    } else {\r\n      if (this.cartesDefausse.length > 0) {\r\n        this.log('Remelange de la défausse dans la pioche');\r\n        this.cartesDefausse.forEach(c => this.cartesPaquet.push(c));\r\n        this.cartesDefausse = [];\r\n        this.cartesMain.push(this.cartesPaquet.pop());\r\n      }\r\n    }\r\n  }\r\n\r\n  private generateMeeples() {\r\n    const meeple1 = this.generateMeeple(random(20, 40));\r\n    const meeple2 = this.generateMeeple(random(20, 40));\r\n    const meeple3 = this.generateMeeple(random(20, 40));\r\n    this.meeples.push(meeple1);\r\n    this.sendMeeple(meeple1, this.terrain.getVoisin(<HexaCellule>this.batiments[0].cellule, 1, 0));\r\n    this.setCouche(meeple1, this.terrain.getVoisin(<HexaCellule>this.batiments[0].cellule, 1, 0));\r\n\r\n    this.meeples.push(meeple2);\r\n    this.sendMeeple(meeple2, this.terrain.getVoisin(<HexaCellule>this.batiments[0].cellule, -1, 0));\r\n    this.setCouche(meeple2, this.terrain.getVoisin(<HexaCellule>this.batiments[0].cellule, -1, 0));\r\n    this.meeples.push(meeple3);\r\n    this.sendMeeple(meeple3, this.terrain.getVoisin(<HexaCellule>this.batiments[0].cellule, 0, -1));\r\n    this.setCouche(meeple3, this.terrain.getVoisin(<HexaCellule>this.batiments[0].cellule, 0, -1));\r\n  }\r\n\r\n  public setCouche(meeple: Meeple, cellule: Cellule) {\r\n    const oldCouche = meeple.couche;\r\n    if (oldCouche) {\r\n      oldCouche.dormeur = undefined;\r\n    }\r\n    cellule.dormeur = meeple;\r\n    meeple.couche = cellule;\r\n  }\r\n\r\n  generateMeeple(age) {\r\n    const meeple = new Meeple(this.generalId++, 'M' + this.generalId, this.generateMeepleName(), this.dateDemarrage - age);\r\n    meeple.color1 = 'rgb(' + random(0, 255) + ',' + random(0, 255) + ',' + random(0, 255) + ')';\r\n    meeple.color2 = 'rgb(' + random(0, 255) + ',' + random(0, 255) + ',' + random(0, 255) + ')';\r\n    return meeple;\r\n  }\r\n\r\n  generateMeepleName(): string {\r\n    const nbSyllabes = random(2, 4);\r\n    let nom = '';\r\n    for (let x = 0; x < nbSyllabes; x++) {\r\n      nom = nom.concat(randomElement(this.meepleSyllabes));\r\n    }\r\n    return nom.substring(0, 10);\r\n  }\r\n\r\n  private buildTerrain() {\r\n    const terrain = new HexaTerrain(12, 8);\r\n    for (let x = 0; x < 12; x++) {\r\n      for (let y = 0; y < 8; y++) {\r\n        if (x < 2 || (x < 3 && y > 2) || (x < 4 && y > 3)) {\r\n          terrain.getCellule(x, y).setCelluleType(CelluleType.FORET);\r\n        }\r\n        if (x > 10 || (x > 9 && y < 6) || (x > 8 && y < 4)) {\r\n          terrain.getCellule(x, y).setCelluleType(CelluleType.PIERRE);\r\n        }\r\n      }\r\n    }\r\n    terrain.getCellule(5, 0).setCelluleType(CelluleType.EAU);\r\n    terrain.getCellule(6, 0).setCelluleType(CelluleType.EAU);\r\n    terrain.getCellule(6, 1).setCelluleType(CelluleType.EAU);\r\n    terrain.getCellule(7, 1).setCelluleType(CelluleType.EAU);\r\n    terrain.getCellule(8, 1).setCelluleType(CelluleType.EAU);\r\n    terrain.getCellule(8, 2).setCelluleType(CelluleType.EAU);\r\n    for (let i = 9; i < 12; i++) { \r\n      terrain.getCellule(i, 2).setCelluleType(CelluleType.EAU);\r\n    }\r\n    this.terrain = terrain;\r\n  }\r\n\r\n  finTour() {\r\n    this.meeples.forEach(m => {\r\n      m.ajouteHistoire();\r\n    });\r\n    this.doActions();\r\n    // meeples eat\r\n    this.doMeepleDrink();\r\n    this.doMeepleEat();\r\n    this.doMeepleSleep();\r\n    this.defausseMain();\r\n    this.piocheX(4);\r\n  }\r\n\r\n  doActions() {\r\n    this.actionsMeeples.forEach(am => {\r\n      switch (am.carte.code) {\r\n        case 'cstr':\r\n          const plan = am.plan;\r\n          // this.retireReserve(plan);\r\n          // if ()\r\n          break;\r\n        case 'hunt':\r\n          break;\r\n        case 'expl':\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  doMeepleSleep() {\r\n    this.meeples.forEach(m => {\r\n      if (!m.couche.batiment) {\r\n        m.histoire[0].sommeil = 0;\r\n      } else if (m.couche.batiment.proto === PROTOS_BATIMENTS.HUTTE) {\r\n        m.histoire[0].sommeil = 1;\r\n      } else if (m.couche.batiment.proto === PROTOS_BATIMENTS.CABANE) {\r\n        m.histoire[0].sommeil = 2;\r\n      }\r\n    });\r\n    this.log('Pas assez de nourriture pour tous.');\r\n  }\r\n\r\n  doMeepleEat() {\r\n    const besoinBouffe = this.meeples.length * 2;\r\n    const reserveBouffe = this.reserve[MATERIAU.VIANDE];\r\n    this.log(this.meeples.length + ' meeples mangent chacun 2 portions ça fait ' + besoinBouffe + ' portions');\r\n    this.log('Il y a ' + reserveBouffe + ' unités de nourriture de 4 portions chacune.');\r\n    if (besoinBouffe >= reserveBouffe / 4) {\r\n      this.log('Tout le monde mange');\r\n      this.reserve['bouffe'] -= besoinBouffe;\r\n      this.meeples.forEach(m => {\r\n        m.histoire[0].bouffe = 2;\r\n      });\r\n    } else if (besoinBouffe >= reserveBouffe / 2) {\r\n      // teste demi portion\r\n      const nbUnites = Math.ceil(besoinBouffe / 4);\r\n      this.log('Restriction de bouffe: une seule portion soit ' + nbUnites + ' unités.');\r\n      this.reserve['bouffe'] -= nbUnites;\r\n      this.meeples.forEach(m => {\r\n        m.histoire[0].bouffe = 1;\r\n      });\r\n    } else {\r\n      this.log('Pas assez de nourriture pour tous.');\r\n      this.meeples.forEach(m => {\r\n        m.histoire[0].bouffe = 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  doMeepleDrink() {\r\n    const besoinEau = this.meeples.length;\r\n    const reserveEau = this.reserve[MATERIAU.EAU];\r\n    if (besoinEau > reserveEau) {\r\n      this.meeples.forEach(m => {\r\n        m.histoire[0].eau = 0;\r\n      });\r\n      this.log(\"Pas assez d'eau pour tous.\");\r\n    } else {\r\n      this.meeples.forEach(m => {\r\n        m.histoire[0].eau = 1;\r\n      });\r\n      this.log('Tout le monde boit');\r\n      this.reserve['eau'] -= besoinEau;\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lZXBsZXMvbWVlcGxlLWluZm9zL21lZXBsZS1pbmZvcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { Meeple } from 'src/app/meeples/domain/meeple';\nimport { CelluleType, TYPE_ACTION } from 'src/app/meeples/domain/cellule';\nimport { MeeplePartieService } from 'src/app/meeples/partie.service';\n\n@Component({\n  selector: 'app-meeple-infos',\n  templateUrl: './meeple-infos.component.html',\n  styleUrls: ['./meeple-infos.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MeepleInfosComponent implements OnInit, OnChanges {\n  \n  @Input()\n  meeple: Meeple;\n  CelluleType = CelluleType;\n\n  actions: any[];\n  TYPE_ACTION = TYPE_ACTION;\n\n  constructor(private partieService: MeeplePartieService) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(\"changes de meeple\");\n    console.log(changes);\n    this.actions = this.partieService.getActionsPossibles(this.meeple);\n\n  }\n  doAction(action) {\n    console.log(\"action\");\n    this.partieService.executeAction(this.meeple, action);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lZXBsZXMvbWVlcGxlL21lZXBsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meeple',\n  templateUrl: './meeple.component.html',\n  styleUrls: ['./meeple.component.scss']\n})\nexport class MeepleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { StartComponent } from './start/start.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TerrainComponent } from './terrain/terrain.component';\r\nimport { CelluleComponent } from './cellule/cellule.component';\r\nimport { PartieComponent } from './partie/partie.component';\r\nimport { MeepleComponent } from './meeple/meeple.component';\r\nimport { MeepleInfosComponent } from './meeple-infos/meeple-infos.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: StartComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [StartComponent, TerrainComponent, CelluleComponent, PartieComponent, MeepleComponent, MeepleInfosComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES)\r\n  ]\r\n})\r\nexport class MeeplesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Message, MessageType } from './domain/message';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  private channel = new Subject<Message>();\r\n  private channelSelected = new Subject<Message>();\r\n\r\n  constructor() {}\r\n\r\n  sendMessage(message: Message) {\r\n    console.log(\"send mesg\", message);\r\n    switch (message.messageType) {\r\n      case MessageType.SELECT:\r\n        this.channelSelected.next(message);\r\n        break;\r\n      default:\r\n        this.channel.next(message);\r\n        break;\r\n    }\r\n  }\r\n\r\n  getChannel() {\r\n    return this.channel.asObservable();\r\n  }\r\n\r\n  getChannelSelected() {\r\n    return this.channelSelected.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MessageService } from 'src/app/meeples/message.service';\r\nimport { Message, MessageType, TargetType } from 'src/app/meeples/domain/message';\r\nimport { Partie, Carte, SelectedElement } from 'src/app/meeples/domain/partie';\r\nimport { Batiment } from 'src/app/meeples/domain/batiment';\r\nimport { HexaCellule } from 'src/app/meeples/domain/hexaTerrain';\r\nimport { Meeple } from './domain/meeple';\r\nimport { Cellule, CelluleType, TYPE_ACTION, ActionMeeples } from './domain/cellule';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MeeplePartieService {\r\n  partie: Partie;\r\n  selectedElement: SelectedElement = { type: TargetType.NONE };\r\n  \r\n  executeAction(arg0: any, arg1: any): any {\r\n    console.log(\"action\", arg0, arg1);\r\n  }\r\n\r\n  \r\n  constructor(private messageService: MessageService) {\r\n    this.partie = new Partie();\r\n  }\r\n\r\n  getPartie() {\r\n    return this.partie;\r\n  }\r\n\r\n  unselect() {\r\n    this.selectedElement.type = TargetType.NONE;\r\n    if (this.selectedElement.meeple) {\r\n      this.selectedElement.meeple.selected = false;\r\n      this.selectedElement.meeple = undefined;\r\n    }\r\n    if (this.selectedElement.cellule) {\r\n      this.selectedElement.cellule.selected = false;\r\n      this.selectedElement.cellule = undefined;\r\n    }\r\n  }\r\n\r\n  selectCellule(cellule: Cellule) {\r\n    if (this.selectedElement.meeple) {\r\n      const m = this.selectedElement.meeple;\r\n      const p = m.position;\r\n      const d = this.partie.terrain.getDistance(cellule, p);\r\n      if (d > m.deplacementMax - m.deplacement) {\r\n        this.messageService.sendMessage(new Message(MessageType.LOG, 'trop loin'));\r\n      } else {\r\n        this.getPartie().sendMeeple(this.selectedElement.meeple, cellule);\r\n        m.deplacement += d;\r\n        this.messageService.sendMessage(new Message(MessageType.MOVE, cellule));\r\n        this.unselect();\r\n        this.messageService.sendMessage(new Message(MessageType.SELECT, this.selectedElement));\r\n      }\r\n    } else {\r\n      this.unselect();\r\n      this.selectedElement = { type: TargetType.CELLULE, cellule };\r\n      cellule.selected = true;\r\n      this.messageService.sendMessage(new Message(MessageType.SELECT, this.selectedElement));\r\n    }\r\n  }\r\n\r\n  selectMeeple(meeple: Meeple) {\r\n    if (this.selectedElement.meeple === meeple) {\r\n      this.unselect();\r\n      meeple.selected = false;\r\n      this.selectedElement = { type: TargetType.MEEPLE, meeple };\r\n      this.messageService.sendMessage(new Message(MessageType.SELECT, this.selectedElement));\r\n    } else {\r\n      this.unselect();\r\n      meeple.selected = true;\r\n      this.selectedElement = { type: TargetType.MEEPLE, meeple };\r\n      this.messageService.sendMessage(new Message(MessageType.SELECT, this.selectedElement));\r\n    }\r\n  }\r\n\r\n  getActionsPossibles(meeple: Meeple) {\r\n    const cellule = meeple.position;\r\n    const actions: { type_action: TYPE_ACTION, description: string }[] = [];\r\n    if (cellule.batiment) {\r\n      // switch (cellule.batiment.proto) {\r\n      actions.push({ type_action: TYPE_ACTION.TRAVAIL, description : 'bosser'});\r\n      // }\r\n    } else {\r\n      actions.push({ type_action: TYPE_ACTION.CONSTRUCTION, description : 'construire un bâtiment'});\r\n    }\r\n    actions.push({ type_action: TYPE_ACTION.RECOLTE, description : 'Récolter'});\r\n    actions.push({ type_action: TYPE_ACTION.EXPLORATION, description : 'Explorer les alentours'});\r\n    switch (meeple.position.celluleType) {\r\n      case CelluleType.FORET:\r\n        actions.push({ type_action: TYPE_ACTION.RECOLTE, description : 'bosser'});\r\n        break;\r\n      case CelluleType.PLAINE:\r\n        actions.push({ type_action: TYPE_ACTION.RECOLTE, description : 'bosser'});\r\n        break;\r\n\r\n    }\r\n    return actions;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lZXBsZXMvcGFydGllL3BhcnRpZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Partie, Carte, SelectedElement } from '../domain/partie';\r\nimport { MessageService } from '../message.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Batiment } from '../domain/batiment';\r\nimport { HexaCellule } from '../domain/hexaTerrain';\r\nimport { Meeple } from '../domain/meeple';\r\nimport { Message, MessageType, TargetType } from '../domain/message';\r\nimport { MeeplePartieService } from '../partie.service';\r\n\r\n@Component({\r\n  selector: 'app-partie',\r\n  templateUrl: './partie.component.html',\r\n  styleUrls: ['./partie.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PartieComponent implements OnInit {\r\n  @Input()\r\n  partie: Partie;\r\n  subs: Subscription;\r\n  subs2: Subscription;\r\n\r\n  TargetType = TargetType;\r\n\r\n  logs: string[];\r\n\r\n  actions: any[];\r\n\r\n  selectedElement: SelectedElement = undefined;\r\n\r\n  getTitle() {\r\n    console.log(\"get\");\r\n    return \"title\";\r\n  }\r\n\r\n  constructor(private ms: MessageService, private partieService: MeeplePartieService) {\r\n    this.subs = this.ms.getChannel().subscribe((m) => this.onMessage(m));\r\n    this.subs2 = this.ms.getChannelSelected().subscribe((m) => this.onMessageSelected(m));\r\n    this.selectedElement = this.partieService.selectedElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onMessageSelected(message: Message) {\r\n    console.log(\"on msg selected\", message);\r\n    this.selectedElement = message.target;\r\n  }\r\n\r\n  onMessage(message: Message) {\r\n    switch (message.messageType) {\r\n      case MessageType.LOG:\r\n        this.log(message.target);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public log(msg: string) {\r\n    this.logs.push(msg);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lZXBsZXMvc3RhcnQvc3RhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Partie } from '../domain/partie';\r\nimport { MeeplePartieService } from 'src/app/meeples/partie.service';\r\n\r\n@Component({\r\n  selector: 'app-start',\r\n  templateUrl: './start.component.html',\r\n  styleUrls: ['./start.component.scss']\r\n})\r\nexport class StartComponent implements OnInit {\r\n  partie: Partie;\r\n  \r\n  constructor(private partieService: MeeplePartieService) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.partie = this.partieService.getPartie();\r\n  }\r\n\r\n}\r\n","export default \".terrain-container {\\n  width: 100%;\\n  overflow: scroll;\\n}\\n.terrain-container .carte {\\n  font-size: 8px;\\n}\\n.terrain-container .carte .ligne {\\n  display: inline-flex;\\n}\\n.terrain-container .carte .ligne:nth-child(2n) {\\n  margin-left: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVlcGxlcy90ZXJyYWluL0U6XFxkZXZlbG9wcGVtZW50XFxwcm9qZXRzXzJcXGNvbG9uc19naXRodWJcXGNvbG9uc1xcY29kZVxcbWVlcGxlcy9zcmNcXGFwcFxcbWVlcGxlc1xcdGVycmFpblxcdGVycmFpbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWVlcGxlcy90ZXJyYWluL3RlcnJhaW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDRSxXQUFBO0VBRUEsZ0JBQUE7QUNIRjtBRElFO0VBRUUsY0FBQTtBQ0hKO0FES0k7RUFHRSxvQkFBQTtBQ0xOO0FETU07RUFDRSxnQkFoQkk7QUNZWiIsImZpbGUiOiJzcmMvYXBwL21lZXBsZXMvdGVycmFpbi90ZXJyYWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJG1pZHRhaWxsZTogMHB4OyAvLyAxNXB4OyB0b2RvIHJlbWV0dHJlIMOgIDE1XHJcbiR0YWlsbGU6IDMwcHg7XHJcblxyXG4udGVycmFpbi1jb250YWluZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIC8vIGhlaWdodDogNDUwcHg7XHJcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcclxuICAuY2FydGUge1xyXG4gICAgLy9wb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBmb250LXNpemU6IDhweDtcclxuICAgIC8vZGlzcGxheTogaW5saW5lLWdyaWQ7XHJcbiAgICAubGlnbmUge1xyXG4gICAgICAvL2Rpc3BsYXk6IGZsZXg7XHJcbiAgICAgIC8vZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgICAgICY6bnRoLWNoaWxkKDJuKSB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6ICRtaWR0YWlsbGU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLnRlcnJhaW4tY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBzY3JvbGw7XG59XG4udGVycmFpbi1jb250YWluZXIgLmNhcnRlIHtcbiAgZm9udC1zaXplOiA4cHg7XG59XG4udGVycmFpbi1jb250YWluZXIgLmNhcnRlIC5saWduZSB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xufVxuLnRlcnJhaW4tY29udGFpbmVyIC5jYXJ0ZSAubGlnbmU6bnRoLWNoaWxkKDJuKSB7XG4gIG1hcmdpbi1sZWZ0OiAwcHg7XG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Terrain } from '../domain/cellule';\r\n\r\n@Component({\r\n  selector: 'app-terrain',\r\n  templateUrl: './terrain.component.html',\r\n  styleUrls: ['./terrain.component.scss']\r\n})\r\nexport class TerrainComponent implements OnInit {\r\n  @Input()\r\n  terrain: Terrain;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\r\n\r\n","\r\nexport function random(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max + 1 - min) + min);\r\n  }\r\n\r\n  export function randomElement(array: any[]) {\r\n    return array[random(0, array.length - 1)];\r\n  }\r\n\r\n  export function  melange(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * i + 1);\r\n      const x = array[j];\r\n      array[j] = array[i];\r\n      array[i] = x;\r\n    }\r\n  }\r\n"],"sourceRoot":"webpack:///"}